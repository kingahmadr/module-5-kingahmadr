import React, { createContext, useContext, useState, ReactNode } from "react";
import { AllProductsProps } from "../interfaces";

// Define the context type
interface DataContextType {
  dataProducts: AllProductsProps[];
  dataElectronics: AllProductsProps[];
  dataShoes: AllProductsProps[];
  singleDataProduct: AllProductsProps | null;
  getAllProducts: () => Promise<void>;
  getSingleProducts: (id: number) => Promise<void>;
  getElectronicProducts: () => Promise<void>;
  getShoesProducts: () => Promise<void>;
}

// Create the context with an initial empty value
const DataContext = createContext<DataContextType | undefined>(undefined);

// Context Provider component
export const DataProvider = ({ children }: { children: ReactNode }) => {
  const [dataProducts, setDataProducts] = useState<AllProductsProps[]>([]);
  const [dataElectronics, setDataElectronis] = useState<AllProductsProps[]>([]);
  const [dataShoes, setDataShoes] = useState<AllProductsProps[]>([]);
  const [singleDataProduct, setSingleDataProduct] =
    useState<AllProductsProps | null>([null]);

  const API_URL = "https://api.escuelajs.co/api/v1";

  const getAllProducts = async () => {
    try {
      const response = await fetch(`${API_URL}/products?limit=30&offset=1`, {
        method: "GET",
      });
      if (!response.ok) {
        alert(`Error fetching Products: ${response.statusText}`);
        return;
      }
      const responseData = await response.json();
      setDataProducts(responseData);
      console.log(responseData);
    } catch (error) {
      alert(`Error fetching Products: ${error}`);
    }
  };

  const getSingleProducts = async (id: number) => {
    try {
      const response = await fetch(`${API_URL}/products/${id}`, {
        method: "GET",
      });
      if (!response.ok) {
        alert(`Error fetching Single Products: ${response.statusText}`);
        return;
      }
      const responseData = await response.json();
      setSingleDataProduct(responseData);
      console.log(responseData);
    } catch (error) {
      alert(`Error fetching Single Products: ${error}`);
    }
  };

  const getElectronicProducts = async () => {
    try {
      const response = await fetch(
        `${API_URL}/categories/2/products?limit=30&offset=1`,
        {
          method: "GET",
        }
      );
      if (!response.ok) {
        alert(`Error fetching Electronics: ${response.statusText}`);
        return;
      }
      const responseData = await response.json();
      setDataElectronis(responseData);
      console.log(responseData);
    } catch (error) {
      alert(`Error fetching Electronics: ${error}`);
    }
  };

  const getShoesProducts = async () => {
    try {
      const response = await fetch(
        `${API_URL}/categories/4/products?limit=30&offset=1`,
        {
          method: "GET",
        }
      );
      if (!response.ok) {
        alert(`Error fetching Shoes: ${response.statusText}`);
        return;
      }
      const responseData = await response.json();
      setDataShoes(responseData);
      console.log(responseData);
    } catch (error) {
      alert(`Error fetching Shoes: ${error}`);
    }
  };

  return (
    <DataContext.Provider
      value={{
        dataProducts,
        dataElectronics,
        dataShoes,
        singleDataProduct,
        getAllProducts,
        getSingleProducts,
        getElectronicProducts,
        getShoesProducts,
      }}
    >
      {children}
    </DataContext.Provider>
  );
};

export const useDataContext = () => {
  const context = useContext(DataContext);
  if (!context) {
    throw new Error("useDataContext must be used within a DataProvider");
  }
  return context;
};
// import { AllProductsProps } from "../interfaces";

// // Fetch all products
// export const getAllProducts = async (): Promise<AllProductsProps[]> => {
//   const API_URL = "https://api.escuelajs.co/api/v1";
//   try {
//     const response = await fetch(`${API_URL}/products?limit=30&offset=1`, {
//       method: "GET",
//     });
//     if (!response.ok) {
//       throw new Error(`Error fetching Products: ${response.statusText}`);
//     }
//     const responseData: AllProductsProps[] = await response.json();
//     return responseData;
//   } catch (error) {
//     throw new Error(`Error fetching Products: ${error}`);
//   }
// };

// // Fetch electronic products
// export const getElectronicProducts = async (): Promise<AllProductsProps[]> => {
//   const API_URL = "https://api.escuelajs.co/api/v1";
//   try {
//     const response = await fetch(
//       `${API_URL}/categories/2/products?limit=30&offset=1`,
//       {
//         method: "GET",
//       }
//     );
//     if (!response.ok) {
//       throw new Error(`Error fetching Electronics: ${response.statusText}`);
//     }
//     const responseData: AllProductsProps[] = await response.json();
//     return responseData;
//   } catch (error) {
//     throw new Error(`Error fetching Electronics: ${error}`);
//   }
// };

// // Fetch shoes products
// export const getShoesProducts = async (): Promise<AllProductsProps[]> => {
//   const API_URL = "https://api.escuelajs.co/api/v1";
//   try {
//     const response = await fetch(
//       `${API_URL}/categories/4/products?limit=30&offset=1`,
//       {
//         method: "GET",
//       }
//     );
//     if (!response.ok) {
//       throw new Error(`Error fetching Shoes: ${response.statusText}`);
//     }
//     const responseData: AllProductsProps[] = await response.json();
//     return responseData;
//   } catch (error) {
//     throw new Error(`Error fetching Shoes: ${error}`);
//   }
// };
